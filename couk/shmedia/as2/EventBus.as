class couk.shmedia.as2.EventBus {		private static var _instance:EventBus = new EventBus();	public static function getInstance():EventBus {		return _instance;	}		private var _events:Object;		public function EventBus() {		_events = {};	}		public function dispatch(type:String,value:Object):Void {		var callbacks:Array = _events[type];		var i:Number = callbacks.length;		while( --i > -1 ) callbacks[i].call(this, value);	}		public function addEvent(type:String, callback:Function):Void {		var pushed:Boolean;		for( var key in _events ) {			if(key == type) {				_events[key].push(callback);				pushed = true;			}		}		if(!pushed) _events[type] = [callback];	}		public function removeEvent(type:String, callback:Function):Void {		var callbacks:Array = _events[type];		var i:Number = callbacks.length;		while( --i > -1 ) {			if(callback === callbacks[i]) callbacks.pop(); 		}	}		public function removeAllOf(type:String):Void {		_events[type].length = 0;	}	}